#include <avr/io.h>
#include <stdlib.h>
#ifndef F_CPU
#define F_CPU 16000000
#endif
#include <util/delay.h>

#include "ws2812.h"

extern void _ws2812_refresh(Ws2812Display *display, volatile uint8_t *pPort, uint8_t portPin);

Ws2812Display *ws2812_create(uint8_t width, uint8_t height)
{
    Ws2812Display *display;
    uint16_t x;

    display = (Ws2812Display *)malloc(sizeof(Ws2812Display) + width * height * 3);

    display->buffer = (uint8_t *)(display + 1);
    for (x = 0; x < width * height * 3; x++)
    {
        display->buffer[x] = 0;
    }

    display->width = width;
    display->height = height;

    return display;
}

void ws2812_delete(Ws2812Display *display)
{
    free(display);
}

void ws2812_refresh(Ws2812Display *display, volatile uint8_t *pPort, uint8_t portPin)
{
    _ws2812_refresh(display, pPort, portPin);
    _delay_ms(2);
}

void ws2812_setPixel(Ws2812Display *display, uint8_t x, uint8_t y, uint8_t red, uint8_t green, uint8_t blue)
{
    uint8_t *pt;

    if (!display->buffer || x >= display->width || y >= display->height)
        return;

    pt = display->buffer + (y * display->width + x) * 3;
    *pt++ = red;
    *pt++ = green;
    *pt = blue;
}
